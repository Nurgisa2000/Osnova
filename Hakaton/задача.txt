1 уровень: Основы Python

1. Напиши программу "Hello World", которая выводит на экран приветствие.
2. Создай программу, которая запрашивает у пользователя его имя и возраст, затем выводит их в формате "Привет, [Имя]! Тебе [Возраст] лет."
3. Напиши программу, которая проверяет, является ли введенное число четным или нечетным, и выводит соответствующее сообщение.
4. Создай программу, используя условные операторы if-else, которая определяет, является ли введенное число положительным, отрицательным или нулем.
5. Напиши программу, которая принимает строку от пользователя и выводит ее в обратном порядке.
6. Создай список чисел и напиши программу, которая выводит только четные числа из этого списка.
7. Напиши программу, которая принимает два числа от пользователя и выводит их сумму.

2 уровень: Работа со списками и циклами

8. Создай программу, используя цикл for, которая выводит квадраты чисел от 1 до 10.
9. Напиши программу, которая принимает список чисел и выводит только те числа, которые больше 5.
10. Создай список строк и напиши программу, которая выводит каждую строку, длина которой больше 8 символов.
11. Напиши программу, используя цикл while, которая запрашивает у пользователя числа до тех пор, пока он не введет отрицательное число.
12. Создай кортеж строк и напиши программу, которая выводит строки в верхнем регистре.

3 уровень: Работа с множествами и словарями

13. Создай словарь, представляющий собой телефонную книгу (имя - номер). Напиши программу, которая по имени выводит соответствующий номер.
14. Напиши программу, которая принимает два множества от пользователя и выводит их объединение.
  
4 уровень: Продвинутые задачи

15. Напиши программу, используя функции, которая вычисляет факториал введенного числа.

5 уровень: Использование `kwargs` в Python

16. Создай функцию, которая принимает различные параметры
(например, имя, возраст, город) с использованием kwargs и выводит 
их в виде предложения. По умолчанию, установи значения по умолчанию 
для некоторых параметров.

17. Напиши программу, которая принимает название товара 
и его цену с использованием kwargs, добавляет этот товар в
словарь корзины покупок и выводит общую сумму покупок.

6 уровень: Расширенная работа с функциями и словарями

20. Создай функцию manage_cities, которая позволяет пользователю управлять своими городами. Функция должна предоставлять следующие возможности:

   - Добавление нового пользователя с указанием его имени и города.
   - Обновление города существующего пользователя.
   - Удаление пользователя из списка.
   - Вывод списка всех пользователей с их городами.
def manage_cities(city_dict):
    """
    Реализация функции для управления городами пользователей.

    Пользователь может:
    1. Добавить нового пользователя.
    2. Обновить город существующего пользователя.
    3. Удалить пользователя из списка.
    4. Вывести список всех пользователей с их городами.

    :param city_dict: Словарь, представляющий города пользователей.
    """
    pass

Эта функция должна взаимодействовать с пользователем, запрашивая необходимые данные и выполняя соответствующие операции с словарем городов.